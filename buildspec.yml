version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build . -f docker/Dockerfile_prd -t $IMAGE_REPO_NAME:$IMAGE_TAG 
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Creating deployment artifacts...
      - sed -i "s/<IMAGE1_URI>/$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com\/$IMAGE_REPO_NAME:$IMAGE_TAG/g" taskdef.json
      - sed -i "s/<ACCOUNT_ID>/$AWS_ACCOUNT_ID/g" taskdef.json
      - sed -i "s/<AWS_REGION>/$AWS_DEFAULT_REGION/g" taskdef.json
      - sed -i "s/<COGNITO_USER_POOL_ID>/$COGNITO_USER_POOL_ID/g" taskdef.json
      - sed -i "s/<COGNITO_CLIENT_ID>/$COGNITO_CLIENT_ID/g" taskdef.json
      - sed -i "s/<ENVIRONMENT>/$ENVIRONMENT/g" taskdef.json
      - sed -i "s|<CORS_ORIGINS>|$CORS_ORIGINS|g" taskdef.json
artifacts:
  files:
    - appspec.yaml
    - taskdef.json
